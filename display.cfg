[display_glyph chamber]
data:
  ................
  ****************
  *....*....*....*
  *....*....*....*
  *....******....*
  *..............*
  *..............*
  *.....****.....*
  *.***.*..*.***.*
  *.....****.....*
  *......**......*
  *..............*
  *.************.*
  *...*......*...*
  ****************
  ................

[display_glyph thermometer]
data:
    0000000000000000
    0000000000000000
    0000000000111000
    0000000001000100
    0000000010010100
    0000000100100100
    0000001001001000
    0000010010010000
    0001100100100000
    0010001001000000
    0100100010000000
    0101110100000000
    0100100100000000
    0010001000000000
    0001110000000000
    0000000000000000

[display_glyph voron]
data:
 ......***.......
 ....*******.....
 ...*********....
 .*************..
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 **..***..******.
 ******..***..**.
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 .*************..
 ...*********....
 ....*******.....
 ......***.......

[display_template _chamber_temperature]
text:
  {% set chamber = printer['temperature_sensor chamber'] %}
  ~chamber~
  { "%3.0f" % (chamber.temperature,) }
  ~degrees~

[display_template _vprint_status]
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    ~voron~
    {" V2.823"}
  {% endif %}

[display_data __voron_display extruder]
position: 0, 0
text: { render("_heater_temperature", param_heater_name= printer.toolhead.extruder) }

[display_data __voron_display fan]
position: 0, 10
text:{ render("_fan_speed") }

[display_data __voron_display heater_bed]
position: 1, 0
text: { render("_heater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display chamber]
position: 1, 10
text: { render("_chamber_temperature") }

[display_data __voron_display print_progress]
position: 2, 0
text: { "{:^10.0%}".format(printer.display_status.progress) }

[display_data __voron_display progress_bar]
position: 2, 1  # Draw graphical progress bar after text is written
text: { draw_progress_bar(2, 0, 10, printer.display_status.progress) }

[display_data __voron_display printing_time]
position: 2, 10
text: { "%6s" % (render("_printing_time").strip(),) }

[display_data __voron_display print_status]
position: 3, 0
text : { render("_vprint_status") }
