#####################################################################
#  Lighting Control
#####################################################################

##   Chamber Lighting - RGB

[neopixel _caselight]
pin: RGB
chain_count: 54
#color_order: GRB
initial_RED: 0.6
initial_GREEN: 0.6
initial_BLUE: 0.6
#initial_WHITE: 0.6


#####################################################################
#  Macros
#####################################################################
[gcode_macro _CASELIGHT_OFF]
gcode:
    _CASELIGHT COLOR="OFF"

[gcode_macro CASELIGHT_OFF]
gcode:
    _CASELIGHT_OFF

[gcode_macro _CASELIGHT]
description: Helper: Set Case Light color
variable_case: {'act'    : {'pri':{'R':0.0, 'G':0.3, 'B':0.0},
                            'sec':{'R':0.0, 'G':0.0, 'B':0.0}},
                'restore': {'pri':{'R':0.0, 'G':0.0, 'B':0.0},
                            'sec':{'R':0.0, 'G':0.0, 'B':0.0}},
                'time'   : 0,
                'sync'   : 0}
variable_select: 1  ; used to select what neopixel is active while blinking
variable_on: False
gcode:
  ##### color definition #####
  {% set color_dic = {'OFF'  :{'R':0.0, 'G':0.0, 'B':0.0},
                      'GREEN':{'R':0.0, 'G':0.3, 'B':0.0},
                      'RED'  :{'R':0.5, 'G':0.0, 'B':0.0},
                      'BLUE' :{'R':0.0, 'G':0.0, 'B':0.5},
                      'DIM'  :{'R':0.5, 'G':0.5, 'B':0.5},
                      'BRIGHT'  :{'R':0.9, 'G':0.9, 'B':0.9},
                      'PREP'  :{'R':0.5, 'G':0.5, 'B':0.0},
                      'RUN'  :{'R':0.3, 'G':0.1, 'B':0.1},
                      'ERROR'  :{'R':0.8, 'G':0.0, 'B':0.0},
                      'DONE'  :{'R':0.2, 'G':0.8, 'B':0.2}} %}
  ##### get PARAMETERS or use defaults values #####
  {% set _dummy = case.update({'time': params.BLINK|default(0)|float}) %}
  {% set _dummy = case.update({'sync': params.SYNC|default(0)|int}) %}
  {% if 'COLOR' in params|upper %}
    {% set color = params.COLOR|upper %}
    {% set _dummy = case.restore.update({'pri':case.act.pri}) %}
    {% if color in color_dic %}
      {% set _dummy = case.act.update({'pri':color_dic[color]}) %}
      {% if color == "OFF" %}
        SET_GCODE_VARIABLE MACRO=_CASELIGHT VARIABLE=on VALUE=False
      {% else %}
        SET_GCODE_VARIABLE MACRO=_CASELIGHT VARIABLE=on VALUE=True
      {% endif %}
    {% else %}
      {action_respond_info("CASE COLOR %s is not defined used default: GREEN" % color)}
      {% set _dummy = case.act.update({'pri':color_dic.GREEN}) %}
    {% endif %}
  {% else %}
    {% set _dummy = case.act.update({'pri':case.restore.pri}) %}
  {% endif %}
  ##### store new variable values #####
  SET_GCODE_VARIABLE MACRO=_CASELIGHT VARIABLE=case VALUE="{case}"
  ##### update to new color and start or stop blinking #####
  SET_LED LED=_caselight RED={case.act.pri.R} GREEN={case.act.pri.G} BLUE={case.act.pri.B} SYNC={case.sync}
  UPDATE_DELAYED_GCODE ID=_CASE_BLINK_DELAY DURATION={case.time}

[delayed_gcode _CASE_BLINK_DELAY]
gcode:
  {% set case = printer["gcode_macro _CASELIGHT"].case %}
  {% set i = [0,1] if printer["gcode_macro _CASELIGHT"].select|int == 1 else [1,0] %}
  SET_GCODE_VARIABLE MACRO=_CASELIGHT VARIABLE=select VALUE={(printer["gcode_macro _CASELIGHT"].select|int * -1)}
  SET_LED LED=_caselight RED={case.act.pri.R * i[1]} GREEN={case.act.pri.G * i[1]} BLUE={case.act.pri.B * i[1]} SYNC={case.sync}
  UPDATE_DELAYED_GCODE ID=_CASE_BLINK_DELAY DURATION={case.time}
